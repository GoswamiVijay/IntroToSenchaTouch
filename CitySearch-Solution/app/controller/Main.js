/*
 * File: app/controller/Main.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CitySearch.controller.Main', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            filterField: 'searchfield#searchfield',
            mainNavView: 'navigationview#mynavigationview'
        },

        control: {
            "filterField": {
                keyup: 'onFilterFieldKeyup',
                change: 'onFilterFieldChange'
            },
            "businesslist": {
                itemtap: 'onBusinessTap'
            }
        }
    },

    onFilterFieldKeyup: function(textfield, e, eOpts) {
        if (e.event.keyCode == 13) {
          this.onSearch(textfield.getValue());
        }
    },

    onFilterFieldChange: function(textfield, newValue, oldValue, eOpts) {
        this.onSearch(newValue);
    },

    onBusinessTap: function(dataview, index, target, record, e, eOpts) {
        this.getMainNavView().push({
            xtype: 'maps',
            title: record.get('name'),
            lat: record.get('latitude'),
            lng: record.get('longitude')
        });
    },

    onSearch: function(searchterm) {
        var baseUrl = "http://api.yelp.com/business_review_search";

        var stores = [
            {
                store: Ext.getStore('Hotels'),
                term: 'hotels'
            },
            {
                store: Ext.getStore('Restaurants'),
                term: 'eat'
            },
            {
                store: Ext.getStore('Shops'),
                term: 'shops'
            }
        ];

        for (var i=0; i<stores.length; i++) {
            stores[i].store.setProxy({
                type: 'jsonp',
                url: baseUrl,
                extraParams: {
                    location: searchterm,
                    ywsid: 'k1Wfd6Rrfj9a8BNRUaG61Q',
                    term: stores[i].term
                },
                reader: {
                  type: 'json',
                  rootProperty: 'businesses'
                }
            });
            stores[i].store.load();
        }
    }

});